{"ast":null,"code":"import { Cliente } from \"../cliente\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../clientes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ClientesFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Cliente salvo/atualizado com sucesso! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientesFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const erro_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", erro_r6, \" \");\n  }\n}\nfunction ClientesFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 10)(2, \"div\", 11)(3, \"label\");\n    i0.ɵɵtext(4, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"div\", 11)(8, \"label\");\n    i0.ɵɵtext(9, \"Data Cadastro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.id);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.dataCadastro);\n  }\n}\nfunction ClientesFormComponent_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵelement(1, \"i\", 24);\n    i0.ɵɵtext(2, \" Salvar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientesFormComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵelement(1, \"i\", 26);\n    i0.ɵɵtext(2, \" Atualizar \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ClientesFormComponent {\n  constructor(service, router, activatedRoute) {\n    this.service = service;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.success = false;\n    this.cliente = new Cliente();\n  }\n  ngOnInit() {\n    let params = this.activatedRoute.params;\n    params.subscribe(urlParams => {\n      this.id = urlParams['id'];\n      if (this.id) {\n        this.service.getClientesById(this.id).subscribe(response => this.cliente = response, errorResponse => this.cliente = new Cliente());\n      }\n    });\n  }\n  onSubmit() {\n    if (this.id) {} else {\n      this.service.salvar(this.cliente).subscribe(response => {\n        this.success = true;\n        this.errors = [];\n        this.cliente = response;\n      }, errorResponse => {\n        this.success = false;\n        this.errors = errorResponse.error.errors;\n      });\n    }\n  }\n  voltarParaListagem() {\n    this.router.navigate(['/clientes-lista']);\n  }\n}\nClientesFormComponent.ɵfac = function ClientesFormComponent_Factory(t) {\n  return new (t || ClientesFormComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nClientesFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientesFormComponent,\n  selectors: [[\"app-clientes-form\"]],\n  decls: 30,\n  vars: 8,\n  consts: [[1, \"mt-4\"], [1, \"breadcrumb\", \"mb-4\"], [1, \"breadcrumb-item\", \"active\"], [1, \"container\"], [3, \"ngSubmit\"], [\"clienteForm\", \"ngForm\"], [1, \"row\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"cpf\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-3\"], [\"class\", \"btn btn-success\", \"type\", \"submit\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"type\", \"submit\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"ml-1\", 3, \"click\"], [1, \"fa\", \"fa-arrow-alt-circle-left\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"type\", \"text\", \"name\", \"id\", \"disabled\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"name\", \"dataCadastro\", \"disabled\", \"true\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"fa\", \"fa-save\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fa\", \"fa-refresh\"]],\n  template: function ClientesFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ol\", 1)(3, \"li\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientesFormComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, ClientesFormComponent_div_9_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtemplate(10, ClientesFormComponent_div_10_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ClientesFormComponent_div_11_Template, 11, 2, \"div\", 9);\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"div\", 10)(14, \"div\", 11)(15, \"label\");\n      i0.ɵɵtext(16, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.cliente.nome = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"div\", 11)(20, \"label\");\n      i0.ɵɵtext(21, \"CPF:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.cliente.cpf = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 6)(24, \"div\", 14);\n      i0.ɵɵtemplate(25, ClientesFormComponent_button_25_Template, 3, 0, \"button\", 15);\n      i0.ɵɵtemplate(26, ClientesFormComponent_button_26_Template, 3, 0, \"button\", 16);\n      i0.ɵɵelementStart(27, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ClientesFormComponent_Template_button_click_27_listener() {\n        return ctx.voltarParaListagem();\n      });\n      i0.ɵɵelement(28, \"i\", 18);\n      i0.ɵɵtext(29, \" Voltar \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.cliente.id ? \"Edi\\u00E7\\u00E3o\" : \"Cadastro\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.cpf);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cliente.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Cliente","i0","ClientesFormComponent","constructor","service","router","activatedRoute","cliente","ngOnInit","params","subscribe","urlParams","id","getClientesById","response","errorResponse","onSubmit","salvar","success","errors","error","voltarParaListagem","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/jlaca/Projetos/ProgramaClientes/Clientes-app/src/app/clientes/clientes-form/clientes-form.component.ts","/home/jlaca/Projetos/ProgramaClientes/Clientes-app/src/app/clientes/clientes-form/clientes-form.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Cliente} from \"../cliente\";\nimport {ClientesService} from \"../../clientes.service\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-clientes-form',\n  templateUrl: './clientes-form.component.html',\n  styleUrls: ['./clientes-form.component.css']\n})\nexport class ClientesFormComponent implements OnInit{\n  cliente: Cliente;\n  success: boolean = false;\n  errors: String[];\n  id:number;\n  constructor(private service: ClientesService, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.cliente=new Cliente();\n\n  }\n  ngOnInit(): void {\n    let params : Observable<Params> = this.activatedRoute.params;\n    params.subscribe(urlParams => {\n      this.id = urlParams['id'];\n      if(this.id) {\n        this.service\n          .getClientesById(this.id)\n          .subscribe(\n            response => this.cliente = response,\n            errorResponse=> this.cliente = new Cliente())\n      }\n    })\n  }\n\n\n  onSubmit() {\n    if(this.id){\n\n    }else {\n\n      this.service\n        .salvar(this.cliente)\n        .subscribe(response => {\n            this.success = true;\n            this.errors = [];\n            this.cliente = response;\n          }, errorResponse => {\n            this.success = false;\n            this.errors = errorResponse.error.errors;\n          }\n        )\n    }\n  }\n\n  voltarParaListagem() {\n    this.router.navigate(['/clientes-lista']);\n  }\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n  <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Edição' :'Cadastro'}}</li>\n</ol>\n\n<div class=\"container\">\n    <form #clienteForm= \"ngForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success==true\">\n          Cliente salvo/atualizado com sucesso!\n        </div>\n        <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\n          {{erro}}\n        </div>\n      </div>\n\n\n\n      <div class=\"row\" *ngIf=\"cliente.id\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label>ID:</label>\n            <input class=\"form-control\" type=\"text\" [ngModel]=\"cliente.id\" name=\"id\" disabled=\"true\">\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label>Data Cadastro</label>\n            <input class=\"form-control\"\n                   name=\"dataCadastro\" disabled=\"true\" type=\"text\" [ngModel]=\"cliente.dataCadastro \">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label>Nome:</label>\n            <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cliente.nome\" name=\"nome\"/>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label>CPF:</label>\n            <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cliente.cpf\" name=\"cpf\">\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <button class=\"btn btn-success\" type=\"submit\" *ngIf=\"!cliente.id\">\n            <i class=\"fa fa-save\"></i>\n            Salvar\n          </button>\n\n          <button class=\"btn btn-primary\" type=\"submit\" *ngIf=\"cliente.id\">\n            <i class=\"fa fa-refresh\"></i>\n            Atualizar\n          </button>\n\n          <button class=\"btn btn-danger ml-1\" type=\"button\" (click)=\"voltarParaListagem()\" >\n            <i class=\"fa fa-arrow-alt-circle-left\"></i>\n            Voltar\n          </button>\n        </div>\n      </div>\n    </form>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}